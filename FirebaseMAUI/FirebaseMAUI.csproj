<Project Sdk="Microsoft.NET.Sdk">

	<PropertyGroup>
		<TargetFrameworks>net8.0-android;net8.0-ios;net8.0-maccatalyst</TargetFrameworks>
		<TargetFrameworks Condition="$([MSBuild]::IsOSPlatform('windows'))">$(TargetFrameworks);net8.0-windows10.0.19041.0</TargetFrameworks>
		<!-- Uncomment to also build the tizen app. You will need to install tizen by following this: https://github.com/Samsung/Tizen.NET -->
		<!-- <TargetFrameworks>$(TargetFrameworks);net8.0-tizen</TargetFrameworks> -->

		<!-- Note for MacCatalyst:
		The default runtime is maccatalyst-x64, except in Release config, in which case the default is maccatalyst-x64;maccatalyst-arm64.
		When specifying both architectures, use the plural <RuntimeIdentifiers> instead of the singular <RuntimeIdentifier>.
		The Mac App Store will NOT accept apps with ONLY maccatalyst-arm64 indicated;
		either BOTH runtimes must be indicated or ONLY macatalyst-x64. -->
		<!-- For example: <RuntimeIdentifiers>maccatalyst-x64;maccatalyst-arm64</RuntimeIdentifiers> -->

		<OutputType>Exe</OutputType>
		<RootNamespace>FirebaseMAUI</RootNamespace>
		<UseMaui>true</UseMaui>
		<SingleProject>true</SingleProject>
		<ImplicitUsings>enable</ImplicitUsings>
		<Nullable>enable</Nullable>

		<!-- Display name -->
		<ApplicationTitle>FirebaseMAUI</ApplicationTitle>

		<!-- App Identifier -->
		<ApplicationId>com.companyname.firebasemaui</ApplicationId>

		<!-- Versions -->
		<ApplicationDisplayVersion>1.0</ApplicationDisplayVersion>
		<ApplicationVersion>1</ApplicationVersion>

		<SupportedOSPlatformVersion Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'ios'">11.0</SupportedOSPlatformVersion>
		<SupportedOSPlatformVersion Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'maccatalyst'">13.1</SupportedOSPlatformVersion>
		<SupportedOSPlatformVersion Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'android'">31</SupportedOSPlatformVersion><!--Android 12-->
		<SupportedOSPlatformVersion Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'windows'">10.0.17763.0</SupportedOSPlatformVersion>
		<TargetPlatformMinVersion Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'windows'">10.0.17763.0</TargetPlatformMinVersion>
		<SupportedOSPlatformVersion Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'tizen'">6.5</SupportedOSPlatformVersion>
	</PropertyGroup>

	<ItemGroup>
		<!-- App Icon -->
		<MauiIcon Include="Resources\AppIcon\appicon.svg" ForegroundFile="Resources\AppIcon\appiconfg.svg" Color="#512BD4" />

		<!-- Splash Screen -->
		<MauiSplashScreen Include="Resources\Splash\splash.svg" Color="#512BD4" BaseSize="128,128" />

		<!-- Images -->
		<MauiImage Include="Resources\Images\*" />
		<MauiImage Update="Resources\Images\dotnet_bot.png" Resize="True" BaseSize="300,185" />

		<!-- Custom Fonts -->
		<MauiFont Include="Resources\Fonts\*" />

		<!-- Raw Assets (also remove the "Resources\Raw" prefix) -->
		<MauiAsset Include="Resources\Raw\**" LogicalName="%(RecursiveDir)%(Filename)%(Extension)" />
	</ItemGroup>

	<ItemGroup>
		<PackageReference Include="Microsoft.Maui.Controls" Version="8.0.14" />
		<PackageReference Include="Microsoft.Maui.Controls.Compatibility" Version="8.0.14" />
		<PackageReference Include="Microsoft.Extensions.Logging.Debug" Version="8.0.0" />
		<PackageReference Include="Newtonsoft.Json" Version="13.0.3" />
		
		<PackageReference Include="Xamarin.AndroidX.Collection" Version="1.4.0.2" Condition="$(TargetFramework.Contains('-android')) == true" />
		<PackageReference Include="Xamarin.AndroidX.Collection.Ktx" Version="1.4.0.1" Condition="$(TargetFramework.Contains('-android')) == true" />
		<PackageReference Include="Xamarin.AndroidX.Fragment.Ktx" Version="1.6.2.1" Condition="$(TargetFramework.Contains('-android')) == true" />
		<PackageReference Include="Xamarin.Build.Download" Version="0.11.4" Condition="$(TargetFramework.Contains('-android')) == true" />
		<PackageReference Include="Xamarin.Firebase.Messaging" Version="123.3.1.2" Condition="$(TargetFramework.Contains('-android')) == true" />		
		<PackageReference Include="Xamarin.Google.Dagger" Version="2.48.1" Condition="$(TargetFramework.Contains('-android')) == true" />
		<PackageReference Include="Xamarin.GooglePlayServices.Base" Version="118.2.0.6" Condition="$(TargetFramework.Contains('-android')) == true" />
		<PackageReference Include="Xamarin.GooglePlayServices.Basement" Version="118.2.0.6" Condition="$(TargetFramework.Contains('-android')) == true" />		
		<PackageReference Include="Xamarin.GooglePlayServices.Iid" Version="117.0.0.14" Condition="$(TargetFramework.Contains('-android')) == true" />
		<PackageReference Include="Xamarin.GooglePlayServices.Tasks" Version="118.0.2.7" Condition="$(TargetFramework.Contains('-android')) == true" />

		<PackageReference Include="Xamarin.Build.Download" Version="0.11.4" Condition="$(TargetFramework.Contains('-ios')) == true" />
		<PackageReference Include="Xamarin.Firebase.iOS.CloudMessaging" Version="8.10.0.3" Condition="$(TargetFramework.Contains('-ios')) == true" />
		<PackageReference Include="Xamarin.Firebase.iOS.Core" Version="8.10.0.3" Condition="$(TargetFramework.Contains('-ios')) == true" />

		<PackageReference Include="FirebaseAdmin" Version="2.4.0" Condition="$(TargetFramework.Contains('-windows')) == true" />
		
	</ItemGroup>

	<ItemGroup Condition="$(TargetFramework.Contains('-android'))">
		<GoogleServicesJson Include="Platforms\Android\google-services.json" Condition="Exists('Platforms\Android\google-services.json')" />
	</ItemGroup>

	<ItemGroup Condition="$(TargetFramework.Contains('-ios')) == true">
		<BundleResource Include="Platforms\iOS\GoogleService-Info.plist" Link="%(RecursiveDir)%(Filename)%(Extension)" Condition="Exists('Platforms\iOS\GoogleService-Info.plist')" Visible="false" />
	</ItemGroup>

</Project>
